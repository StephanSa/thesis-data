Help me generate code for my project. I Need to write in C#. I need email notifications for accout-related events and file-related activities for my multi-user filesharing and collaboration platform.

Sure, I can help you outline a basic structure for your email notification system. Here's a simple example of how you might structure your email notification service.

Firstly, you'll need to install a NuGet package for sending emails. You can use MailKit, which is a free and open-source library for .NET.


Install-Package MailKit -Version 2.10.0
Then, you can create an EmailService class that handles sending emails.


using MailKit.Net.Smtp;
using MimeKit;
using System.Threading.Tasks;

public class EmailService
{
    private readonly string _smtpServer;
    private readonly int _port;
    private readonly string _username;
    private readonly string _password;

    public EmailService(string smtpServer, int port, string username, string password)
    {
        _smtpServer = smtpServer;
        _port = port;
        _username = username;
        _password = password;
    }

    public async Task SendEmailAsync(string to, string subject, string body)
    {
        var email = new MimeMessage();
        email.From.Add(MailboxAddress.Parse(_username));
        email.To.Add(MailboxAddress.Parse(to));
        email.Subject = subject;
        email.Body = new TextPart(MimeKit.Text.TextFormat.Html) { Text = body };

        using var smtp = new SmtpClient();
        await smtp.ConnectAsync(_smtpServer, _port, MailKit.Security.SecureSocketOptions.StartTls);
        await smtp.AuthenticateAsync(_username, _password);
        await smtp.SendAsync(email);
        await smtp.DisconnectAsync(true);
    }
}
You can then use this service to send emails when account-related events or file-related activities occur. For example:


public class AccountService
{
    private readonly EmailService _emailService;

    public AccountService(EmailService emailService)
    {
        _emailService = emailService;
    }

    public async Task CreateAccountAsync(string email, string username)
    {
        // Create account logic here...

        // Send welcome email
        await _emailService.SendEmailAsync(email, "Welcome to our platform!", $"Hello {username}, welcome to our platform!");
    }
}
And similarly for file-related activities:


public class FileService
{
    private readonly EmailService _emailService;

    public FileService(EmailService emailService)
    {
        _emailService = emailService;
    }

    public async Task ShareFileAsync(string email, string filename)
    {
        // Share file logic here...

        // Send notification email
        await _emailService.SendEmailAsync(email, "File shared with you", $"A file named {filename} has been shared with you.");
    }
}